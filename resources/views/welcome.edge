<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>JIRA API TEST</title>
  {{ style('style') }}

  <script>
    
    function showComments(title, key) {
      const request = new XMLHttpRequest();
      request.open('GET', '/get-all-comment/?issuekey='+key, true);

      request.onload = function() {
        if (this.status >= 200 && this.status < 400) {

          var resp = JSON.parse(this.response);

          resp.forEach(function(value, index) {
            let container = generateCommentHtml(value)
            document.getElementById('comments-'+title).appendChild(container)
          })
          document.getElementById('comments-'+title).removeAttribute('hidden')
          document.getElementById('add-comment-button').onclick = () => addComment(title, key)
        } else {
          console.log('Error on request')
        }
      }
    
      request.onerror = function() {
      }
    
      request.send();
    }

    function generateCommentHtml(comment) {

      let commentContainer = document.createElement("div")
      commentContainer.classList.add('comment-container')
      commentContainer.classList.add('card-1')

      let avatarContainer = document.createElement("img")
      avatarContainer.classList.add('comment-avatar')
      avatarContainer.src = comment.author.avatarUrls['48x48']

      let commentBody = document.createElement("div")
      commentBody.classList.add("comment-body") // coluna

      let commentAuthorName = document.createElement("div")
      commentAuthorName.classList.add("comment-author-name")

      let commentAuthorNameText = document.createElement("div")
      commentAuthorNameText.classList.add("comment-author-name-text")
      commentAuthorNameText.innerHTML = comment.author.displayName

      commentAuthorName.appendChild(commentAuthorNameText)

      let commentText = document.createElement("div")

      let commentTextContent = document.createElement("div")
      commentTextContent.classList.add("comment-text-content")
      commentTextContent.innerHTML = comment.body

      commentText.appendChild(commentTextContent)
      

      commentContainer.appendChild(avatarContainer)
      commentContainer.appendChild(commentBody)

      commentBody.appendChild(commentAuthorName)
      commentBody.appendChild(commentText)


      return commentContainer

    }

    function addComment(title, key) {

      const value = document.getElementById('add-comment-'+title).value

      var xhttp = new XMLHttpRequest();
      xhttp.open("POST", "/add-comment", true);
      xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      xhttp.onreadystatechange = function () {
        if (xhttp.readyState === xhttp.DONE) {
            if (xhttp.status == 200) {

              let comment = JSON.parse(this.response)

              let container = generateCommentHtml(comment)
              document.getElementById('comments-'+title).appendChild(container)
            }
        }
    }
      xhttp.send("comment="+value+"&key="+key)
  
    }

    function getAllIssuesFromProject() {

      const request = new XMLHttpRequest();
      request.open('GET', '/get-all-issues-from-project', true);
    
      request.onload = function() {
        if (this.status >= 200 && this.status < 400) {
          var resp = JSON.parse(this.response);

          resp.forEach(function (value, index) {
            let issueTitle = resp[index].fields.summary
            let issueKey = resp[index].key
            document.getElementById('issues-container').appendChild(generateIssueCard(issueTitle, issueKey))
          })
          
        } else {
          console.log('Error on request')
        }
      }
    
      request.onerror = function() {
      }
    
      request.send();

    }

    function generateIssueCard(issueTitle, issuekey) {

      const cardElement = document.createElement('div')
      cardElement.classList.add('card')

      const h2Element = document.createElement("H2")
      const h2Title = document.createTextNode(issueTitle)
      h2Element.appendChild(h2Title)

      const hrElement = document.createElement("hr")

      const hiddenDiv = document.createElement("div")
      hiddenDiv.setAttribute("hidden", true)
      hiddenDiv.setAttribute('id', 'comments-'+issueTitle)
      hiddenDiv.classList.add("hidden-div")

      const getCommentButton = document.createElement("button")
      getCommentButton.innerHTML = 'Get Comments'
      getCommentButton.onclick = () => showComments(issueTitle, issuekey)
      
      const cardInput = document.createElement('input')
      cardInput.setAttribute('type', 'text')
      cardInput.setAttribute('placeholder', 'Add a comment')
      cardInput.setAttribute('id', 'add-comment-'+issueTitle)

      const addCommentButton = document.createElement("button");
      addCommentButton.innerHTML = 'Add'
      addCommentButton.setAttribute('id', 'add-comment-button')
      addCommentButton.onclick = () => addComment(issueTitle, issuekey)

      cardElement.appendChild(h2Element)
      cardElement.appendChild(hrElement)
      cardElement.appendChild(hiddenDiv)
      cardElement.appendChild(getCommentButton)
      
      hiddenDiv.appendChild(cardInput)
      hiddenDiv.appendChild(addCommentButton)

      return cardElement
}
  
  
  </script>
</head>
<body onpageshow="getAllIssuesFromProject()">
  <section>

    <div id="issues-container">
 
    </div>
  </section>
</body>


</html>
